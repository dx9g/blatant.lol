loadstring(game:HttpGet('https://raw.githubusercontent.com/drillygzzly/Roblox-UI-Libs/main/Yun%20V2%20Lib/Yun%20V2%20Lib%20Source.lua'))()

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Drawing = Drawing

local Library = initLibrary()
local Window = Library:Load({name = "xan", sizeX = 425, sizeY = 512, color = Color3.fromRGB(255, 255, 255)})

local Tab = Window:Tab("Aiming")
local Tab2 = Window:Tab("Visuals")

local Visualssec1 = Tab2:Section{name = "ESP", column = 1}
local Visualssec2 = Tab2:Section{name = "Tracers", column = 2}

-- Zmienne ESP i Tracers
local espEnabled = false
local tracersEnabled = false
local espColor = Color3.fromRGB(255, 0, 0)
local tracersColor = Color3.fromRGB(0, 255, 0)

local tracers = {}

-- Tworzenie ESP dla gracza
local function createESP(player)
    if player == LocalPlayer then return end
    if not player.Character then return end

    local box = Drawing.new("Square")
    box.Visible = false
    box.Thickness = 1.5
    box.Filled = false
    box.Color = espColor

    local tracer = Drawing.new("Line")
    tracer.Visible = false
    tracer.Thickness = 1.5
    tracer.Color = tracersColor

    tracers[player] = {box = box, tracer = tracer}
end

-- Aktualizacja ESP i Tracers
RunService.RenderStepped:Connect(function()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local character = player.Character
            local rootPart = character.HumanoidRootPart
            local head = character:FindFirstChild("Head")
            local humanoid = character:FindFirstChildOfClass("Humanoid")

            if head and humanoid and rootPart then
                local screenPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)
                local headScreenPos = Camera:WorldToViewportPoint(head.Position)

                local espBox = tracers[player] and tracers[player].box
                local tracerLine = tracers[player] and tracers[player].tracer

                if espBox and tracerLine then
                    if espEnabled then
                        espBox.Size = Vector2.new(50, 100 / (screenPos.Z / 5))
                        espBox.Position = Vector2.new(screenPos.X - espBox.Size.X / 2, screenPos.Y - espBox.Size.Y / 2)
                        espBox.Color = espColor
                        espBox.Visible = true
                    else
                        espBox.Visible = false
                    end

                    if tracersEnabled then
                        tracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2 + 200)
                        tracerLine.To = Vector2.new(screenPos.X, screenPos.Y)
                        tracerLine.Color = tracersColor
                        tracerLine.Visible = true
                    else
                        tracerLine.Visible = false
                    end
                end
            end
        end
    end
end)

-- Czyszczenie ESP po opuszczeniu gry
Players.PlayerRemoving:Connect(function(player)
    if tracers[player] then
        tracers[player].box:Remove()
        tracers[player].tracer:Remove()
        tracers[player] = nil
    end
end)

-- Dodawanie ESP dla nowych graczy
Players.PlayerAdded:Connect(function(player)
    wait(1) -- Czekamy, aż postać się załaduje
    createESP(player)
end)

-- Tworzenie ESP dla obecnych graczy
for _, player in pairs(Players:GetPlayers()) do
    createESP(player)
end)

-- UI Elementy dla ESP i Tracers
Visualssec1:Toggle {
    Name = "ESP Enabled",
    flag = "esp_enabled", 
    callback = function(bool)
        espEnabled = bool
    end
}

Visualssec1:Colorpicker {
    Name = "ESP Color",
    flag = "esp_color",
    Default = Color3.fromRGB(255, 0, 0),
    callback = function(color)
        espColor = color
    end
}

Visualssec2:Toggle {
    Name = "Tracers Enabled",
    flag = "tracers_enabled", 
    callback = function(bool)
        tracersEnabled = bool
    end
}

Visualssec2:Colorpicker {
    Name = "Tracers Color",
    flag = "tracers_color",
    Default = Color3.fromRGB(0, 255, 0),
    callback = function(color)
        tracersColor = color
    end
}
